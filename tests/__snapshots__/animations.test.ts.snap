// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`animations t-transition combined with component 1`] = `
"function anonymous(context,extra
) {
    let utils = this.constructor.utils;
    let QWeb = this.constructor;
    let parent = context;
    let owner = context;
    let sibling = null;
    var h = this.h;
    let c1 = [], p1 = {key:1};
    var vn1 = h('div', p1, c1);
    //COMPONENT
    let templateId3 = \`__4__\`;
    let w3 = templateId3 in parent.__owl__.cmap ? parent.__owl__.children[parent.__owl__.cmap[templateId3]] : false;
    let props3 = {};
    if (w3 && w3.__owl__.currentFiber && !w3.__owl__.vnode) {
        w3.destroy();
        w3 = false;
    }
    if (w3) {
        w3.__updateProps(props3, extra.fiber, undefined, undefined, sibling);
        let pvnode = w3.__owl__.pvnode;
        c1.push(pvnode);
    } else {
        let componentKey3 = \`Child\`;
        let W3 = context.constructor.components[componentKey3] || QWeb.components[componentKey3]|| context['Child'];
        if (!W3) {throw new Error('Cannot find the definition of component \\"' + componentKey3 + '\\"')}
        w3 = new W3(parent, props3);
        parent.__owl__.cmap[templateId3] = w3.__owl__.id;
        let def2 = w3.__prepare(extra.fiber, undefined, undefined, sibling);
        let pvnode = h('dummy', {key: templateId3, hook: {insert(vn) { let nvn=w3.__mount(fiber, pvnode.elm);pvnode.elm=nvn.elm;utils.transitionInsert(vn, 'chimay');},remove() {},destroy(vn) {let finalize = () => {
          w3.destroy();
        };
        utils.transitionRemove(vn, 'chimay', finalize);}}});
        const fiber = w3.__owl__.currentFiber;
        def2.then(function () {if (fiber.isCompleted) {return;} const vnode = fiber.vnode; pvnode.sel = vnode.sel; });
        c1.push(pvnode);
        w3.__owl__.pvnode = pvnode;
    }
    sibling = w3.__owl__.currentFiber || sibling;
    return vn1;
}"
`;

exports[`animations t-transition combined with t-component and t-if 1`] = `
"function anonymous(context,extra
) {
    let utils = this.constructor.utils;
    let QWeb = this.constructor;
    let parent = context;
    let owner = context;
    let sibling = null;
    var h = this.h;
    let c1 = [], p1 = {key:1};
    var vn1 = h('div', p1, c1);
    if (context['state'].display) {
        //COMPONENT
        let templateId3 = \`__4__\`;
        let w3 = templateId3 in parent.__owl__.cmap ? parent.__owl__.children[parent.__owl__.cmap[templateId3]] : false;
        let props3 = {};
        if (w3 && w3.__owl__.currentFiber && !w3.__owl__.vnode) {
            w3.destroy();
            w3 = false;
        }
        if (w3) {
            w3.__updateProps(props3, extra.fiber, undefined, undefined, sibling);
            let pvnode = w3.__owl__.pvnode;
            c1.push(pvnode);
        } else {
            let componentKey3 = \`Child\`;
            let W3 = context.constructor.components[componentKey3] || QWeb.components[componentKey3]|| context['Child'];
            if (!W3) {throw new Error('Cannot find the definition of component \\"' + componentKey3 + '\\"')}
            w3 = new W3(parent, props3);
            parent.__owl__.cmap[templateId3] = w3.__owl__.id;
            let def2 = w3.__prepare(extra.fiber, undefined, undefined, sibling);
            let pvnode = h('dummy', {key: templateId3, hook: {insert(vn) { let nvn=w3.__mount(fiber, pvnode.elm);pvnode.elm=nvn.elm;utils.transitionInsert(vn, 'chimay');},remove() {},destroy(vn) {let finalize = () => {
          w3.destroy();
        };
        utils.transitionRemove(vn, 'chimay', finalize);}}});
            const fiber = w3.__owl__.currentFiber;
            def2.then(function () {if (fiber.isCompleted) {return;} const vnode = fiber.vnode; pvnode.sel = vnode.sel; });
            c1.push(pvnode);
            w3.__owl__.pvnode = pvnode;
        }
        sibling = w3.__owl__.currentFiber || sibling;
    }
    return vn1;
}"
`;

exports[`animations t-transition with no delay/duration 1`] = `
"function anonymous(context,extra
) {
    let utils = this.constructor.utils;
    let sibling = null;
    var h = this.h;
    let c1 = [], p1 = {key:1};
    var vn1 = h('span', p1, c1);
    p1.hook = {
      insert: vn => {
        utils.transitionInsert(vn, 'jupiler');
      },
      remove: (vn, rm) => {
        utils.transitionRemove(vn, 'jupiler', rm);
      },
    };
    c1.push({text: \`blue\`});
    return vn1;
}"
`;

exports[`animations t-transition, on a simple node (insert) 1`] = `
"function anonymous(context,extra
) {
    let utils = this.constructor.utils;
    let sibling = null;
    var h = this.h;
    let c1 = [], p1 = {key:1};
    var vn1 = h('span', p1, c1);
    p1.hook = {
      insert: vn => {
        utils.transitionInsert(vn, 'chimay');
      },
      remove: (vn, rm) => {
        utils.transitionRemove(vn, 'chimay', rm);
      },
    };
    c1.push({text: \`blue\`});
    return vn1;
}"
`;
