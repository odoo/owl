// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RouteComponent can render simple cases 1`] = `
"function anonymous(context,extra
) {
    let utils = this.constructor.utils;
    let QWeb = this.constructor;
    let parent = context;
    let owner = context;
    let sibling = null;
    let result;
    var h = this.h;
    if (context['routeComponent']) {
        const nodeKey6 = context['env'].router.currentRouteName;
        //COMPONENT
        let k9 = \`__10__\` + nodeKey6;
        let w8 = k9 in parent.__owl__.cmap ? parent.__owl__.children[parent.__owl__.cmap[k9]] : false;
        let vn11 = {};
        result = vn11;
        let props8 = Object.assign({}, context['env'].router.currentParams);
        if (w8 && w8.__owl__.currentFiber && !w8.__owl__.vnode) {
            w8.destroy();
            w8 = false;
        }
        if (w8) {
            w8.__updateProps(props8, extra.fiber, undefined, undefined, sibling);
            let pvnode = w8.__owl__.pvnode;
            utils.defineProxy(vn11, pvnode);
        } else {
            let componentKey8 = \`routeComponent\`;
            let W8 = context.constructor.components[componentKey8] || QWeb.components[componentKey8]|| context['routeComponent'];
            if (!W8) {throw new Error('Cannot find the definition of component \\"' + componentKey8 + '\\"')}
            w8 = new W8(parent, props8);
            parent.__owl__.cmap[k9] = w8.__owl__.id;
            let def7 = w8.__prepare(extra.fiber, undefined, undefined, sibling);
            let pvnode = h('dummy', {key: k9, hook: {insert(vn) { let nvn=w8.__mount(fiber, pvnode.elm);pvnode.elm=nvn.elm;},remove() {},destroy(vn) {w8.destroy();}}});
            const fiber = w8.__owl__.currentFiber;
            def7.then(function () { if (fiber.isCompleted) { return; } const vnode = fiber.vnode; pvnode.sel = vnode.sel; });
            utils.defineProxy(vn11, pvnode);
            w8.__owl__.pvnode = pvnode;
        }
        w8.__owl__.parentLastFiberId = extra.fiber.id;
        sibling = w8.__owl__.currentFiber || sibling;
    }
    return result;
}"
`;
