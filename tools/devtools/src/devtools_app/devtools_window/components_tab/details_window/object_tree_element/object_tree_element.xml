<?xml version="1.0" encoding="UTF-8" ?>
<templates xml:space="preserve">
  <t t-name="devtools.ObjectTreeElement" owl="1">
    <div class="m-0 p-0 text-nowrap w-100 object-line"
      t-att-class="attenuateIfPrototype" 
      t-on-click.stop="() => this.store.toggleObjectTreeElementsDisplay(this.props)" 
      t-on-contextmenu.prevent="(ev) => this.store.contextMenu.open(ev, this.contextMenu.el)" 
    >
      <div t-attf-style="padding-left: {{objectPadding}}rem">
        <i class="fa mx-1 pointer-icon"
          t-att-class="{'fa-caret-right': !props.toggled, 'fa-caret-down': props.toggled}"
          t-attf-style="visibility: {{props.hasChildren ? '' : 'hidden'}};"
        />
        <t t-esc="objectName"/>
        <t t-if="props.content.length > 0">: </t> 
        <t t-if="props.contentType == 'getter'">
          <span class="getter-content" t-on-click.stop="() => this.store.loadGetterContent(this.props)">
            <t t-esc="props.content"/>
          </span>
        </t>
        <t t-else="">
          <span class="object-content" t-att-class="attenuateIfPrototype" t-on-dblclick.stop="setupEditMode">
            <t t-if="state.editMode">   
              <input t-attf-id="objectEditionInput/{{pathAsString}}" t-ref="input" type="text" placeholder="" t-att-value="props.content" t-on-keyup="editObject"/>
            </t>
            <t t-else="">
              <t t-esc="props.content"/>
            </t>
          </span> 
        </t>
      </div>
    </div>
    <div class="custom-menu d-none" t-attf-style="top: {{store.contextMenu.top}}; left: {{store.contextMenu.left}}" t-ref="contextmenu">
      <ul class="my-1">
        <li t-on-click="storeObjectAsGlobal" class="custom-menu-item py-1 px-4 text-nowrap">Store as global variable</li>
        <t t-if='props.contentType == "function"'>
          <li t-on-click="inspectFunctionSource" class="custom-menu-item py-1 px-4 text-nowrap">Inspect function source code</li>
        </t>
      </ul>
    </div>
    <t t-if="props.toggled">
      <t t-foreach="props.children" t-as="child" t-key="child.name">
        <ObjectTreeElement t-props="child"/>
      </t>
    </t>
  </t>
</templates>

