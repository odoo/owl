<?xml version="1.0" encoding="UTF-8" ?>
<templates xml:space="preserve">
  <t t-name="devtools.TreeElement" owl="1">
    <div t-attf-id="treeElement/{{pathAsString}}" 
      t-att-class="{'component-selected': props.selected,'component-highlighted': props.highlighted}" 
      class="tree-component my-0 p-0" 
      t-on-contextmenu.prevent="openMenu" 
      t-on-mouseover.stop="hoverComponent" 
      t-on-click.stop="toggleComponent" 
    >
      <div class="component-wrapper" t-attf-style="padding-left: calc({{props.depth}} * 0.8rem)">
        <t t-if="props.children.length > 0">
          <i class="fa fa-caret-right mx-1" t-attf-style="cursor: pointer;{{props.toggled ? 'transform: rotate(90deg);' : ''}}" t-on-click.stop="toggleDisplay"></i>
        </t>
        <t t-else="">
          <i class="fa fa-caret-right mx-1" t-attf-style="visibility: hidden;"></i>
        </t><t t-if="props.depth">&lt;</t><div class="name-wrapper">
          <HighlightText originalText="props.name" searchValue="state.searched ? store.componentSearch.search : ''"/>
          <t t-if="minimizedKey.length > 0">
            <div class="key-wrapper"> key</div>=<div class="key-name"><t t-out="minimizedKey"/></div>
          </t>
        </div><t t-if="props.depth">&gt;</t>
      </div>
      <div class="custom-menu hidden" t-attf-id="customMenu/{{pathAsString}}">
        <ul class="my-1">
          <li t-on-click.stop="expandAllChildren" class="custom-menu-item">Expand children</li>
          <li t-on-click.stop="foldAllChildren" class="custom-menu-item">Fold children</li>
          <li t-on-click.stop='() => this.store.logComponentInConsole("instance", props.path)' class="custom-menu-item">Store as global variable</li>
          <li t-on-click.stop='() => this.store.inspectComponentSource(props.path)' class="custom-menu-item">Inspect source code</li>
          <t t-if="props.path.length !== 1">
            <li t-on-click.stop='() => this.store.inspectComponentInDOM(props.path)' class="custom-menu-item">Inspect in Elements tab</li>
            <li t-on-click.stop='() => this.store.refreshComponent(props.path)' class="custom-menu-item">Force rerender</li>
            <li t-on-click.stop='() => this.store.logComponentInConsole("subscription", props.path)' class="custom-menu-item">Store observed states as global variable</li>
            <li t-on-click.stop='() => this.store.inspectCompiledTemplate(props.path)' class="custom-menu-item">Inspect compiled template</li>
            <li t-on-click.stop='() => this.store.inspectRAwTemplate(props.path)' class="custom-menu-item">Log raw template</li>
          </t>
        </ul>
      </div>
    </div>
    <t t-if="props.toggled">
      <t t-foreach="props.children" t-as="child" t-key="child.key">
        <TreeElement t-props="child"/>
      </t>
    </t>
  </t>
</templates>
