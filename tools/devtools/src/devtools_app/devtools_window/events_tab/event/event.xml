<?xml version="1.0" encoding="UTF-8" ?>
<templates xml:space="preserve">
  <t t-name="devtools.Event" owl="1">
    <div class="event-container">
      <div class="my-0 p-0 object-line" t-on-click.stop="toggleDisplay">
        <div class="ps-2">
          <i class="fa mx-1 pointer-icon"
            t-att-class="{'fa-caret-right': !props.toggled, 'fa-caret-down': props.toggled}"
            t-attf-style="visibility: {{props.origin ? '' : 'hidden'}};"
          />
          <span class="text-nowrap">
            <t t-esc="props.type"/>: 
            &lt;<span style="cursor:pointer; color: var(--component-color);"
                  t-on-click.stop="() => this.store.selectComponent(props.path)" 
                  t-on-mouseover.stop="() => this.store.highlightComponent(props.path)"  
                  t-esc="props.component"
                />
            <t t-if="minimizedKey.length > 0">
              <span t-if="minimizedKey.length > 0" style="color: var(--key-name);"> key</span>=<span style="color: var(--key-content);">
                <t t-esc="minimizedKey"/>
              </span>
            </t>&gt;
            <span t-if="props.type !== 'destroy'">
              (<t t-esc="renderTime"/>ms)
            </span>
          </span>
        </div>
      </div>
      <t t-if="props.toggled">
        <div class="my-0 pt-1 object-line">
          <i class="fa fa-caret-right mx-1 pe-2" style="visibility: hidden;"></i>
          <span>
            origin: 
            &lt;<span style="cursor:pointer; color: var(--component-color);" 
                  t-on-click.stop="() => this.store.selectComponent(props.origin.path)" 
                  t-on-mouseover.stop="() => this.store.highlightComponent(props.origin.path)" 
                  t-esc="props.origin.component"
                />
            <t t-if="originMinimizedKey.length > 0">
              <span style="color: var(--key-name);"> key</span>=<span style="color: var(--key-content);">
                <t t-esc="originMinimizedKey"/>
              </span>
            </t>&gt;
          </span>
        </div>
      </t>
    </div>
  </t>
</templates>
