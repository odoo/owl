<?xml version="1.0" encoding="UTF-8" ?>
<templates xml:space="preserve">
  <t t-name="devtools.EventNode" owl="1">
    <div class="my-0 p-0 object-line"
      t-on-click.stop="toggleDisplay" 
      t-on-contextmenu.prevent="(ev) => this.store.contextMenu.open(ev, this.contextMenu.el)" 
    >
      <div t-attf-style="padding-left: {{eventPadding}}rem">
        <i class="fa mx-1 pointer-icon"
          t-att-class="{'fa-caret-right': !props.toggled, 'fa-caret-down': props.toggled}"
          t-attf-style="visibility: {{props.children.length > 0 ? '' : 'hidden'}};"
        />
        <span class="text-nowrap">
          <t t-esc="props.type"/>: 
          &lt;<span style="cursor:pointer; color: var(--component-color);" 
                t-on-click.stop="() => this.store.selectComponent(props.path)" 
                t-on-mouseover.stop="() => this.store.highlightComponent(props.path)" 
                t-esc="props.component"/>
          <t t-if="minimizedKey.length > 0">
            <span t-if="minimizedKey.length > 0" style="color: var(--key-name);"> key</span>=<span style="color: var(--key-content);">
              <t t-esc="minimizedKey"/>
            </span>
          </t>&gt;
          <span t-if="props.type !== 'destroy'">
            (<t t-esc="props.time"/> ms)
          </span>
        </span>
      </div>
    </div>
    <div class="custom-menu d-none" t-attf-style="top: {{store.contextMenu.top}}; left: {{store.contextMenu.left}}" t-ref="contextmenu">
      <ul class="my-1">
        <li t-on-click.stop="() => this.store.toggleEventAndChildren(props, true)" class="custom-menu-item py-1 px-4">Expand children</li>
        <li t-on-click.stop="() => this.store.toggleEventAndChildren(props, false)" class="custom-menu-item py-1 px-4">Fold children</li>
      </ul>
    </div>
    <t t-if="props.toggled">
      <t t-foreach="props.children" t-as="child" t-key="child.id">
        <EventNode t-props="child"/>
      </t>
    </t>
  </t>
</templates>
